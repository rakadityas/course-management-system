// Code generated by MockGen. DO NOT EDIT.
// Source: domain/course/course.go

// Package coursedomain is a generated GoMock package.
package coursedomain

import (
	context "context"
	coursedomain "github/rakadityas/course-management-system/domain/course"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCourseDomainItf is a mock of CourseDomainItf interface.
type MockCourseDomainItf struct {
	ctrl     *gomock.Controller
	recorder *MockCourseDomainItfMockRecorder
}

// MockCourseDomainItfMockRecorder is the mock recorder for MockCourseDomainItf.
type MockCourseDomainItfMockRecorder struct {
	mock *MockCourseDomainItf
}

// NewMockCourseDomainItf creates a new mock instance.
func NewMockCourseDomainItf(ctrl *gomock.Controller) *MockCourseDomainItf {
	mock := &MockCourseDomainItf{ctrl: ctrl}
	mock.recorder = &MockCourseDomainItfMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCourseDomainItf) EXPECT() *MockCourseDomainItfMockRecorder {
	return m.recorder
}

// GetCourseByID mocks base method.
func (m *MockCourseDomainItf) GetCourseByID(ctx context.Context, id int64) (*coursedomain.Course, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCourseByID", ctx, id)
	ret0, _ := ret[0].(*coursedomain.Course)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCourseByID indicates an expected call of GetCourseByID.
func (mr *MockCourseDomainItfMockRecorder) GetCourseByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCourseByID", reflect.TypeOf((*MockCourseDomainItf)(nil).GetCourseByID), ctx, id)
}
